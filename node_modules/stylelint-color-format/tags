!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/4fe1a60/
*.js	package.json	/^    "*.js": [$/;"	a	language:JSON	object:lint-staged
0	package.json	/^      "npm test",$/;"	s	language:JSON	array:lint-staged.*.js
0	package.json	/^      "stylelint"$/;"	s	language:JSON	array:xo.extends
0	package.json	/^      {$/;"	o	language:JSON	array:xo.overrides
0	package.json	/^    "stylelint",$/;"	s	language:JSON	array:keywords
1	package.json	/^      "prettier --write",$/;"	s	language:JSON	array:lint-staged.*.js
1	package.json	/^    "stylelint-plugin",$/;"	s	language:JSON	array:keywords
2	package.json	/^      "git add"$/;"	s	language:JSON	array:lint-staged.*.js
2	package.json	/^    "css",$/;"	s	language:JSON	array:keywords
3	package.json	/^    "sass",$/;"	s	language:JSON	array:keywords
4	package.json	/^    "scss"$/;"	s	language:JSON	array:keywords
accept	rules/color-format/format.test.js	/^  accept: [$/;"	P	language:JavaScript
arrowParens	package.json	/^    "arrowParens": "avoid"$/;"	s	language:JSON	object:prettier
author	package.json	/^  "author": "Filipe Kiss <eu@filipekiss.com.br>",$/;"	s	language:JSON
bracketSpacing	package.json	/^    "bracketSpacing": false,$/;"	b	language:JSON	object:prettier
bugs	package.json	/^  "bugs": {$/;"	o	language:JSON
code	rules/color-format/format.test.js	/^      code: '.hex-color { color: #222 ); } ',$/;"	P	language:JavaScript
code	rules/color-format/format.test.js	/^      code: '.hex-color { color: #3333 ); } ',$/;"	P	language:JavaScript
code	rules/color-format/format.test.js	/^      code: '.hex-color { color: #444444 ); } ',$/;"	P	language:JavaScript
code	rules/color-format/format.test.js	/^      code: '.hex-color-border { border: 6px solid #222 ); } ',$/;"	P	language:JavaScript
code	rules/color-format/format.test.js	/^      code: '.hsla-color { color: hsl(328, 100%, 44%); }',$/;"	P	language:JavaScript
code	rules/color-format/format.test.js	/^      code: '.rgb-color { color: rgb(34, 34, 34); }',$/;"	P	language:JavaScript
color	package.json	/^    "color": "^3.0.0"$/;"	s	language:JSON	object:dependencies
color	rules/color-format/format.js	/^    const color = colorConverter(hexColor);$/;"	V	language:JavaScript
colorConverter	rules/color-format/format.js	/^const colorConverter = require('color');$/;"	C	language:JavaScript
colorConverter	rules/color-format/format.js	/^const colorConverter = require('color');$/;"	V	language:JavaScript
colorTranslation	rules/color-format/format.js	/^  const colorTranslation = hexMatch.reduce((table, hexColor, idx, src) => {$/;"	C	language:JavaScript
column	rules/color-format/format.test.js	/^      column: 21,$/;"	P	language:JavaScript
column	rules/color-format/format.test.js	/^      column: 39,$/;"	P	language:JavaScript
declString	rules/color-format/format.js	/^      const declString = decl.toString();$/;"	V	language:JavaScript
dependencies	package.json	/^  "dependencies": {$/;"	o	language:JSON
description	package.json	/^  "description": "Convert Hex colors to either RGBA or HSLA",$/;"	s	language:JSON
description	rules/color-format/format.test.js	/^      description: 'Invalid Hex Color',$/;"	P	language:JavaScript
description	rules/color-format/format.test.js	/^      description: 'Valid HSL Color',$/;"	P	language:JavaScript
description	rules/color-format/format.test.js	/^      description: 'Valid RGB Color',$/;"	P	language:JavaScript
description	rules/color-format/format.test.js	/^      description: 'Valid long hex color',$/;"	P	language:JavaScript
description	rules/color-format/format.test.js	/^      description: 'Valid short hex color in shorthand property',$/;"	P	language:JavaScript
description	rules/color-format/format.test.js	/^      description: 'Valid short hex color',$/;"	P	language:JavaScript
devDependencies	package.json	/^  "devDependencies": {$/;"	o	language:JSON
engines	package.json	/^  "engines": {$/;"	o	language:JSON
eslint-config-stylelint	package.json	/^    "eslint-config-stylelint": "^8.1.0",$/;"	s	language:JSON	object:devDependencies
extends	package.json	/^    "extends": [$/;"	a	language:JSON	object:xo
files	package.json	/^        "files": "**\/*.test.js",$/;"	s	language:JSON	object:xo.overrides.0
fixColorFormat	rules/color-format/format.js	/^const fixColorFormat = (value, fixer) => {$/;"	C	language:JavaScript
fixPositions	rules/color-format/format.js	/^      const fixPositions = [];$/;"	A	language:JavaScript
fixTo	rules/color-format/format.js	/^            fixTo: actual.format,$/;"	P	language:JavaScript
format	rules/color-format/format.js	/^        format: ['rgb', 'rgba', 'hsl', 'hsla'],$/;"	P	language:JavaScript
format	rules/color-format/format.test.js	/^    format: 'rgb',$/;"	P	language:JavaScript
format	rules/index.js	/^  format: require('.\/color-format\/format'),$/;"	P	language:JavaScript
hexMatch	rules/color-format/format.js	/^  const hexMatch = value.match(\/#[0-9A-Za-z]+\/g);$/;"	C	language:JavaScript
homepage	package.json	/^  "homepage": "https:\/\/github.com\/filipekiss\/stylelint-color-format#readme",$/;"	s	language:JSON
husky	package.json	/^    "husky": "^0.14.3",$/;"	s	language:JSON	object:devDependencies
if	rules/color-format/format.js	/^        if (!\/[:,\\s]\/.test(declString[match.startIndex - 1])) {$/;"	M	language:JavaScript
if	rules/color-format/format.js	/^        if (!hexMatch) {$/;"	M	language:JavaScript
if	rules/color-format/format.js	/^        if (context && context.fix) {$/;"	M	language:JavaScript
if	rules/color-format/format.js	/^      if (fixPositions.length > 0) {$/;"	M	language:JavaScript
if	rules/color-format/format.js	/^    if (!validOptions) {$/;"	M	language:JavaScript
if	rules/color-format/format.js	/^    if (fixer.fixTo.indexOf('hsl') > -1) {$/;"	M	language:JavaScript
if	rules/color-format/format.js	/^  if (!hexMatch) {$/;"	M	language:JavaScript
if	rules/color-format/format.js	/^  if (!value) {$/;"	M	language:JavaScript
index	rules/color-format/format.js	/^          index: match.startIndex,$/;"	P	language:JavaScript
keywords	package.json	/^  "keywords": [$/;"	a	language:JSON
license	package.json	/^  "license": "MIT",$/;"	s	language:JSON
line	rules/color-format/format.test.js	/^      line: 1,$/;"	P	language:JavaScript
lint	package.json	/^    "lint": "xo",$/;"	s	language:JSON	object:scripts
lint-staged	package.json	/^    "lint-staged": "^7.1.0",$/;"	s	language:JSON	object:devDependencies
lint-staged	package.json	/^  "lint-staged": {$/;"	o	language:JSON
main	package.json	/^  "main": "index.js",$/;"	s	language:JSON
message	rules/color-format/format.js	/^          message: messages.rejected(hexValue),$/;"	P	language:JavaScript
message	rules/color-format/format.test.js	/^      message: 'Unexpected hex color "#222" (color-format\/format)',$/;"	P	language:JavaScript
message	rules/color-format/format.test.js	/^      message: 'Unexpected hex color "#3333" (color-format\/format)',$/;"	P	language:JavaScript
message	rules/color-format/format.test.js	/^      message: 'Unexpected hex color "#444444" (color-format\/format)',$/;"	P	language:JavaScript
messages	rules/color-format/format.js	/^const messages = ruleMessages(ruleName, {$/;"	C	language:JavaScript
name	package.json	/^  "name": "stylelint-color-format",$/;"	s	language:JSON
node	package.json	/^    "node": ">=6"$/;"	s	language:JSON	object:engines
node	rules/color-format/format.js	/^          node: decl,$/;"	P	language:JavaScript
node/no-unpublished-require	package.json	/^          "node\/no-unpublished-require": 0,$/;"	n	language:JSON	object:xo.overrides.0.rules
np	package.json	/^    "np": "^2.20.1",$/;"	s	language:JSON	object:devDependencies
overrides	package.json	/^    "overrides": [$/;"	a	language:JSON	object:xo
peerDependencies	package.json	/^  "peerDependencies": {$/;"	o	language:JSON
precommit	package.json	/^    "precommit": "lint-staged",$/;"	s	language:JSON	object:scripts
prettier	package.json	/^    "prettier": "^1.12.1",$/;"	s	language:JSON	object:devDependencies
prettier	package.json	/^    "prettier": true,$/;"	b	language:JSON	object:xo
prettier	package.json	/^  "prettier": {$/;"	o	language:JSON
prettier:check	package.json	/^    "prettier:check": "prettier '**\/*.js' --list-different",$/;"	s	language:JSON	object:scripts
prettier:fix	package.json	/^    "prettier:fix": "prettier '**\/*.js' --write"$/;"	s	language:JSON	object:scripts
reject	rules/color-format/format.test.js	/^  reject: [$/;"	P	language:JavaScript
rejected	rules/color-format/format.js	/^  rejected: hex => `Unexpected hex color "${hex}"`,$/;"	P	language:JavaScript
repository	package.json	/^  "repository": {$/;"	o	language:JSON
rule	rules/color-format/format.js	/^const rule = function(actual, options, context) {$/;"	r	language:JavaScript
ruleName	rules/color-format/format.js	/^const ruleName = 'color-format\/format';$/;"	C	language:JavaScript
ruleName	rules/color-format/format.js	/^const ruleName = 'color-format\/format';$/;"	V	language:JavaScript
ruleName	rules/color-format/format.test.js	/^  ruleName: format.ruleName,$/;"	P	language:JavaScript
rules	index.js	/^const rules = require('.\/rules');$/;"	C	language:JavaScript
rules	index.js	/^const rules = require('.\/rules');$/;"	V	language:JavaScript
rules	package.json	/^        "rules": {$/;"	o	language:JSON	object:xo.overrides.0
scripts	package.json	/^  "scripts": {$/;"	o	language:JSON
semi	package.json	/^    "semi": true,$/;"	b	language:JSON	object:prettier
singleQuote	package.json	/^    "singleQuote": true,$/;"	b	language:JSON	object:prettier
space	package.json	/^    "space": 2,$/;"	n	language:JSON	object:xo
startIndex	rules/color-format/format.js	/^            startIndex: match.startIndex,$/;"	P	language:JavaScript
style-search	package.json	/^    "style-search": "^0.1.0",$/;"	s	language:JSON	object:peerDependencies
styleSearch	rules/color-format/format.js	/^const styleSearch = require('style-search');$/;"	C	language:JavaScript
styleSearch	rules/color-format/format.js	/^const styleSearch = require('style-search');$/;"	V	language:JavaScript
stylelint	package.json	/^    "stylelint": "^8.0.0 || ^9.0.0"$/;"	s	language:JSON	object:peerDependencies
stylelint	package.json	/^    "stylelint": "^8.3.1",$/;"	s	language:JSON	object:devDependencies
stylelint	rules/color-format/format.js	/^const stylelint = require('stylelint');$/;"	C	language:JavaScript
stylelint	rules/color-format/format.js	/^const stylelint = require('stylelint');$/;"	V	language:JavaScript
stylelint-color-format	README.md	/^# stylelint-color-format$/;"	h	language:markdown
stylelint-test-rule-tape	package.json	/^    "stylelint-test-rule-tape": "^0.2.0",$/;"	s	language:JSON	object:devDependencies
test	package.json	/^    "test": "node rules\/color-format\/format.test.js",$/;"	s	language:JSON	object:scripts
testRule	rules/color-format/format.test.js	/^const testRule = require('stylelint-test-rule-tape');$/;"	C	language:JavaScript
testRule	rules/color-format/format.test.js	/^const testRule = require('stylelint-test-rule-tape');$/;"	V	language:JavaScript
trailingComma	package.json	/^    "trailingComma": "es5",$/;"	s	language:JSON	object:prettier
type	package.json	/^    "type": "git",$/;"	s	language:JSON	object:repository
unicorn/import-index	package.json	/^          "unicorn\/import-index": 0$/;"	n	language:JSON	object:xo.overrides.0.rules
url	package.json	/^    "url": "git+https:\/\/github.com\/filipekiss\/stylelint-color-format.git"$/;"	s	language:JSON	object:repository
url	package.json	/^    "url": "https:\/\/github.com\/filipekiss\/stylelint-color-format\/issues"$/;"	s	language:JSON	object:bugs
value	rules/color-format/format.js	/^    value = value.replace(hexColor, fixedColor);$/;"	P	language:JavaScript
version	package.json	/^  "version": "0.2.0",$/;"	s	language:JSON
xo	package.json	/^    "xo": "^0.21.0"$/;"	s	language:JSON	object:devDependencies
xo	package.json	/^  "xo": {$/;"	o	language:JSON
