{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from '../reducers';\nexport default function configureStore() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var middlewares = [ReduxThunk];\n  var enhancers = [applyMiddleware.apply(void 0, middlewares) // other store enhancers if any\n  ];\n  var composeEnhancers = composeWithDevTools({// other compose enhancers if any\n    // Specify here other options if needed\n  });\n  var store = createStore(rootReducer, initialState, composeEnhancers.apply(void 0, enhancers));\n\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('../reducers', function () {\n      /* eslint-disable global-require */\n      var nextReducer = require('../reducers').default;\n\n      store.replaceReducer(nextReducer);\n    });\n  }\n\n  return store;\n}","map":{"version":3,"sources":["/home/sav/track-frontend/project/src/store/storeDev.js"],"names":["createStore","applyMiddleware","ReduxThunk","composeWithDevTools","rootReducer","configureStore","initialState","middlewares","enhancers","composeEnhancers","store","module","hot","accept","nextReducer","require","default","replaceReducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,WAAP,MAAwB,aAAxB;AAEA,eAAe,SAASC,cAAT,GAA2C;AAAA,MAAnBC,YAAmB,uEAAJ,EAAI;AACxD,MAAMC,WAAW,GAAG,CAACL,UAAD,CAApB;AACA,MAAMM,SAAS,GAAG,CAChBP,eAAe,MAAf,SAAmBM,WAAnB,CADgB,CAEhB;AAFgB,GAAlB;AAIA,MAAME,gBAAgB,GAAGN,mBAAmB,CAAC,CAC3C;AACA;AAF2C,GAAD,CAA5C;AAIA,MAAMO,KAAK,GAAGV,WAAW,CAACI,WAAD,EAAcE,YAAd,EAA4BG,gBAAgB,MAAhB,SAAoBD,SAApB,CAA5B,CAAzB;;AACA,MAAIG,MAAM,CAACC,GAAX,EAAgB;AACd;AACAD,IAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,aAAlB,EAAiC,YAAM;AACrC;AACA,UAAMC,WAAW,GAAGC,OAAO,CAAC,aAAD,CAAP,CAAuBC,OAA3C;;AACAN,MAAAA,KAAK,CAACO,cAAN,CAAqBH,WAArB;AACD,KAJD;AAKD;;AAED,SAAOJ,KAAP;AACD","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\nimport ReduxThunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport rootReducer from '../reducers'\n\nexport default function configureStore(initialState = {}) {\n  const middlewares = [ReduxThunk]\n  const enhancers = [\n    applyMiddleware(...middlewares),\n    // other store enhancers if any\n  ]\n  const composeEnhancers = composeWithDevTools({\n    // other compose enhancers if any\n    // Specify here other options if needed\n  })\n  const store = createStore(rootReducer, initialState, composeEnhancers(...enhancers))\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('../reducers', () => {\n      /* eslint-disable global-require */\n      const nextReducer = require('../reducers').default\n      store.replaceReducer(nextReducer)\n    })\n  }\n\n  return store\n}\n"]},"metadata":{},"sourceType":"module"}