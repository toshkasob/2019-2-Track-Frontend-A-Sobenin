{"ast":null,"code":"import _classCallCheck from \"/home/sav/track-frontend/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sav/track-frontend/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sav/track-frontend/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sav/track-frontend/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sav/track-frontend/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/sav/track-frontend/project/src/containers/CounterContainer.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Counter from '../components/Counter';\nimport ActionTypes from '../constants/ActionTypes';\nimport { incrementIfOdd } from '../actions/counter';\nimport { connect } from 'react-redux';\nexport var CounterContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CounterContainer, _React$Component);\n\n  function CounterContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CounterContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CounterContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.increment = function () {\n      _this.props.dispatch({\n        type: ActionTypes.INCREMENT_COUNTER\n      });\n    };\n\n    _this.decrement = function () {\n      _this.props.dispatch({\n        type: ActionTypes.DECREMENT_COUNTER\n      });\n    };\n\n    _this.incrementIfOdd = function () {\n      incrementIfOdd();\n    };\n\n    return _this;\n  }\n\n  _createClass(CounterContainer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Counter, {\n        counter: this.props.counter,\n        increment: this.increment,\n        decrement: this.decrement,\n        incrementIfOdd: this.incrementIfOdd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return CounterContainer;\n}(React.Component);\nCounterContainer.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  counter: PropTypes.number.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    counter: state.counter\n  };\n}\n\nexport default connect(mapStateToProps)(CounterContainer);","map":{"version":3,"sources":["/home/sav/track-frontend/project/src/containers/CounterContainer.js"],"names":["React","PropTypes","Counter","ActionTypes","incrementIfOdd","connect","CounterContainer","increment","props","dispatch","type","INCREMENT_COUNTER","decrement","DECREMENT_COUNTER","counter","Component","propTypes","func","isRequired","number","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,WAAaC,gBAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,UAMEC,SANF,GAMc,YAAM;AAChB,YAAKC,KAAL,CAAWC,QAAX,CAAoB;AAAEC,QAAAA,IAAI,EAAEP,WAAW,CAACQ;AAApB,OAApB;AACD,KARH;;AAAA,UAUEC,SAVF,GAUc,YAAM;AAChB,YAAKJ,KAAL,CAAWC,QAAX,CAAoB;AAAEC,QAAAA,IAAI,EAAEP,WAAW,CAACU;AAApB,OAApB;AACD,KAZH;;AAAA,UAcET,cAdF,GAcmB,YAAM;AACrBA,MAAAA,cAAc;AACf,KAhBH;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAkBW;AACP,aACE,oBAAC,OAAD;AACE,QAAA,OAAO,EAAE,KAAKI,KAAL,CAAWM,OADtB;AAEE,QAAA,SAAS,EAAE,KAAKP,SAFlB;AAGE,QAAA,SAAS,EAAE,KAAKK,SAHlB;AAIE,QAAA,cAAc,EAAE,KAAKR,cAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAQD;AA3BH;;AAAA;AAAA,EAAsCJ,KAAK,CAACe,SAA5C;AAAaT,gB,CACJU,S,GAAY;AACjBP,EAAAA,QAAQ,EAAER,SAAS,CAACgB,IAAV,CAAeC,UADR;AAEjBJ,EAAAA,OAAO,EAAEb,SAAS,CAACkB,MAAV,CAAiBD;AAFT,C;;AA6BrB,SAASE,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLP,IAAAA,OAAO,EAAEO,KAAK,CAACP;AADV,GAAP;AAGD;;AAED,eAAeT,OAAO,CAACe,eAAD,CAAP,CAAyBd,gBAAzB,CAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Counter from '../components/Counter'\nimport ActionTypes from '../constants/ActionTypes'\nimport { incrementIfOdd } from '../actions/counter'\nimport { connect } from 'react-redux'\n\nexport class CounterContainer extends React.Component {\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    counter: PropTypes.number.isRequired,\n  }\n\n  increment = () => {\n    this.props.dispatch({ type: ActionTypes.INCREMENT_COUNTER })\n  }\n\n  decrement = () => {\n    this.props.dispatch({ type: ActionTypes.DECREMENT_COUNTER })\n  }\n\n  incrementIfOdd = () => {\n    incrementIfOdd()\n  }\n\n  render() {\n    return (\n      <Counter\n        counter={this.props.counter}\n        increment={this.increment}\n        decrement={this.decrement}\n        incrementIfOdd={this.incrementIfOdd}\n      />\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    counter: state.counter,\n  }\n}\n\nexport default connect(mapStateToProps)(CounterContainer)\n"]},"metadata":{},"sourceType":"module"}