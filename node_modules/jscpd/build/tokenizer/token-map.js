"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = require("../utils");
var TOKEN_VALUE_HASH_LENGTH = 10;
var TOKEN_TYPE_HASH_LENGTH = 10;
var TOKEN_HASH_LENGTH = TOKEN_VALUE_HASH_LENGTH + TOKEN_TYPE_HASH_LENGTH;
function createTokenHash(token) {
    return utils_1.md5(token.type).substr(0, TOKEN_TYPE_HASH_LENGTH) + utils_1.md5(token.value).substr(0, TOKEN_VALUE_HASH_LENGTH);
}
var TokensMap = /** @class */ (function () {
    function TokensMap(tokens, format, minTokens) {
        this.tokens = tokens;
        this.format = format;
        this.minTokens = minTokens;
        this.position = 0;
        this.map = this.tokens.map(function (token) { return createTokenHash(token); }).join('');
    }
    TokensMap.prototype.getStartPosition = function () {
        return this.tokens[0].range[0];
    };
    TokensMap.prototype.getEndPosition = function () {
        return this.tokens[this.getLength() - 1].range[1];
    };
    TokensMap.prototype.getFormat = function () {
        return this.format;
    };
    TokensMap.prototype.getLength = function () {
        return this.tokens.length;
    };
    TokensMap.prototype.getSourceId = function () {
        return this.sourceId;
    };
    TokensMap.prototype.setSourceId = function (id) {
        this.sourceId = id;
    };
    TokensMap.prototype[Symbol.iterator] = function () {
        return this;
    };
    TokensMap.prototype.next = function () {
        var result;
        var mapFrame = utils_1.md5(this.map.substring(this.position * TOKEN_HASH_LENGTH, this.position * TOKEN_HASH_LENGTH + this.minTokens * TOKEN_HASH_LENGTH)).substring(0, 10);
        if (this.position < this.tokens.length - this.minTokens) {
            result = {
                done: false,
                value: {
                    id: mapFrame,
                    format: this.getFormat(),
                    sourceId: this.getSourceId(),
                    start: this.tokens[this.position],
                    end: this.tokens[this.position + this.minTokens]
                }
            };
            this.position++;
        }
        else {
            result = {
                done: true,
                value: {}
            };
        }
        return result;
    };
    return TokensMap;
}());
exports.TokensMap = TokensMap;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9rZW4tbWFwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3Rva2VuaXplci90b2tlbi1tYXAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQSxrQ0FBK0I7QUFFL0IsSUFBTSx1QkFBdUIsR0FBRyxFQUFFLENBQUM7QUFDbkMsSUFBTSxzQkFBc0IsR0FBRyxFQUFFLENBQUM7QUFDbEMsSUFBTSxpQkFBaUIsR0FBRyx1QkFBdUIsR0FBRyxzQkFBc0IsQ0FBQztBQUUzRSxTQUFTLGVBQWUsQ0FBQyxLQUFhO0lBQ3BDLE9BQU8sV0FBRyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLHNCQUFzQixDQUFDLEdBQUcsV0FBRyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLHVCQUF1QixDQUFDLENBQUM7QUFDakgsQ0FBQztBQUVEO0lBS0UsbUJBQW9CLE1BQWdCLEVBQVUsTUFBYyxFQUFVLFNBQWlCO1FBQW5FLFdBQU0sR0FBTixNQUFNLENBQVU7UUFBVSxXQUFNLEdBQU4sTUFBTSxDQUFRO1FBQVUsY0FBUyxHQUFULFNBQVMsQ0FBUTtRQUovRSxhQUFRLEdBQVcsQ0FBQyxDQUFDO1FBSzNCLElBQUksQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsVUFBQSxLQUFLLElBQUksT0FBQSxlQUFlLENBQUMsS0FBSyxDQUFDLEVBQXRCLENBQXNCLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDdkUsQ0FBQztJQUVNLG9DQUFnQixHQUF2QjtRQUNFLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDakMsQ0FBQztJQUVNLGtDQUFjLEdBQXJCO1FBQ0UsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDcEQsQ0FBQztJQUVNLDZCQUFTLEdBQWhCO1FBQ0UsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3JCLENBQUM7SUFFTSw2QkFBUyxHQUFoQjtRQUNFLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUM7SUFDNUIsQ0FBQztJQUVNLCtCQUFXLEdBQWxCO1FBQ0UsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3ZCLENBQUM7SUFFTSwrQkFBVyxHQUFsQixVQUFtQixFQUFVO1FBQzNCLElBQUksQ0FBQyxRQUFRLEdBQUcsRUFBRSxDQUFDO0lBQ3JCLENBQUM7SUFFTSxvQkFBQyxNQUFNLENBQUMsUUFBUSxDQUFDLEdBQXhCO1FBQ0UsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRU0sd0JBQUksR0FBWDtRQUNFLElBQUksTUFBaUMsQ0FBQztRQUN0QyxJQUFNLFFBQVEsR0FBVyxXQUFHLENBQzFCLElBQUksQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUNoQixJQUFJLENBQUMsUUFBUSxHQUFHLGlCQUFpQixFQUNqQyxJQUFJLENBQUMsUUFBUSxHQUFHLGlCQUFpQixHQUFHLElBQUksQ0FBQyxTQUFTLEdBQUcsaUJBQWlCLENBQ3ZFLENBQ0YsQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBRW5CLElBQUksSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQ3ZELE1BQU0sR0FBRztnQkFDUCxJQUFJLEVBQUUsS0FBSztnQkFDWCxLQUFLLEVBQUU7b0JBQ0wsRUFBRSxFQUFFLFFBQVE7b0JBQ1osTUFBTSxFQUFFLElBQUksQ0FBQyxTQUFTLEVBQUU7b0JBQ3hCLFFBQVEsRUFBRSxJQUFJLENBQUMsV0FBVyxFQUFFO29CQUM1QixLQUFLLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO29CQUNqQyxHQUFHLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUM7aUJBQ2pEO2FBQ0YsQ0FBQztZQUNGLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztTQUNqQjthQUFNO1lBQ0wsTUFBTSxHQUFHO2dCQUNQLElBQUksRUFBRSxJQUFJO2dCQUNWLEtBQUssRUFBRSxFQUFlO2FBQ3ZCLENBQUM7U0FDSDtRQUNELE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUM7SUFDSCxnQkFBQztBQUFELENBQUMsQUFsRUQsSUFrRUM7QUFsRVksOEJBQVMifQ==