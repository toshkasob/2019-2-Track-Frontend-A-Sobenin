"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
var token_map_1 = require("./token-map");
__export(require("./prism"));
function groupByFormat(tokens) {
    var result = {};
    tokens.forEach(function (token) { return (result[token.format] = result[token.format] ? __spread(result[token.format], [token]) : [token]); });
    return result;
}
exports.groupByFormat = groupByFormat;
function generateMapsForFormats(tokens, minTokens) {
    return Object.values(groupByFormat(tokens)).map(function (toks) { return new token_map_1.TokensMap(toks, toks[0].format, minTokens); });
}
exports.generateMapsForFormats = generateMapsForFormats;
function createTokensMaps(tokens, minTokens) {
    return generateMapsForFormats(tokens, minTokens);
}
exports.createTokensMaps = createTokensMaps;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdG9rZW5pemVyL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSx5Q0FBd0M7QUFFeEMsNkJBQXdCO0FBRXhCLFNBQWdCLGFBQWEsQ0FBQyxNQUFnQjtJQUM1QyxJQUFNLE1BQU0sR0FBZ0MsRUFBRSxDQUFDO0lBQy9DLE1BQU0sQ0FBQyxPQUFPLENBQUMsVUFBQSxLQUFLLElBQUksT0FBQSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLFVBQUssTUFBTSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsR0FBRSxLQUFLLEdBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBMUYsQ0FBMEYsQ0FBQyxDQUFDO0lBQ3BILE9BQU8sTUFBTSxDQUFDO0FBQ2hCLENBQUM7QUFKRCxzQ0FJQztBQUVELFNBQWdCLHNCQUFzQixDQUFDLE1BQWdCLEVBQUUsU0FBaUI7SUFDeEUsT0FBTyxNQUFNLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxVQUFBLElBQUksSUFBSSxPQUFBLElBQUkscUJBQVMsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxTQUFTLENBQUMsRUFBOUMsQ0FBOEMsQ0FBQyxDQUFDO0FBQzFHLENBQUM7QUFGRCx3REFFQztBQUVELFNBQWdCLGdCQUFnQixDQUFDLE1BQWdCLEVBQUUsU0FBaUI7SUFDbEUsT0FBTyxzQkFBc0IsQ0FBQyxNQUFNLEVBQUUsU0FBUyxDQUFDLENBQUM7QUFDbkQsQ0FBQztBQUZELDRDQUVDIn0=