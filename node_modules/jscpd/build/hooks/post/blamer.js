"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
var safe_1 = require("colors/safe");
var Blamer = require('blamer');
var BlamerPostHook = /** @class */ (function () {
    function BlamerPostHook() {
    }
    BlamerPostHook.prototype.use = function (jscpd) {
        return __awaiter(this, void 0, void 0, function () {
            var _a;
            var _this = this;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _a = jscpd;
                        return [4 /*yield*/, Promise.all(jscpd.clones.map(function (clone) {
                                return _this.matchClone(clone);
                            }))];
                    case 1:
                        _a.clones = _b.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    BlamerPostHook.prototype.matchClone = function (clone) {
        var blamer = new Blamer();
        var blameFileA = blamer.blameByFile(clone.duplicationA.sourceId);
        var blameFileB = blamer.blameByFile(clone.duplicationB.sourceId);
        return Promise.all([blameFileA, blameFileB])
            .then(function (_a) {
            var _b = __read(_a, 2), blamedFileA = _b[0], blamedFileB = _b[1];
            var cloneBlamed = __assign({}, clone, { duplicationA: __assign({}, clone.duplicationA, { blame: getBlamedLines(blamedFileA, clone.duplicationA.start.line, clone.duplicationA.end.line) }), duplicationB: __assign({}, clone.duplicationB, { blame: getBlamedLines(blamedFileB, clone.duplicationB.start.line, clone.duplicationB.end.line) }) });
            return cloneBlamed;
        })
            .catch(function (error) {
            console.log(safe_1.yellow("Blamer " + error.error));
            return Promise.resolve(clone);
        });
    };
    return BlamerPostHook;
}());
exports.BlamerPostHook = BlamerPostHook;
function getBlamedLines(blamedFiles, start, end) {
    var _a = __read(Object.keys(blamedFiles), 1), file = _a[0];
    var result = {};
    Object.keys(blamedFiles[file])
        .filter(function (lineNumber) {
        return Number(lineNumber) >= start && Number(lineNumber) <= end;
    })
        .map(function (lineNumber) { return blamedFiles[file][lineNumber]; })
        .forEach(function (info) {
        result[info.line] = info;
    });
    return result;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmxhbWVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2hvb2tzL3Bvc3QvYmxhbWVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxvQ0FBcUM7QUFNckMsSUFBTSxNQUFNLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBRWpDO0lBQUE7SUFtQ0EsQ0FBQztJQWxDYyw0QkFBRyxHQUFoQixVQUFpQixLQUFZOzs7Ozs7O3dCQUMzQixLQUFBLEtBQUssQ0FBQTt3QkFBVSxxQkFBTSxPQUFPLENBQUMsR0FBRyxDQUM5QixLQUFLLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxVQUFDLEtBQWE7Z0NBQzdCLE9BQU8sS0FBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQzs0QkFDaEMsQ0FBQyxDQUFDLENBQ0gsRUFBQTs7d0JBSkQsR0FBTSxNQUFNLEdBQUcsU0FJZCxDQUFDOzs7OztLQUNIO0lBRU8sbUNBQVUsR0FBbEIsVUFBbUIsS0FBYTtRQUM5QixJQUFNLE1BQU0sR0FBRyxJQUFJLE1BQU0sRUFBRSxDQUFDO1FBRTVCLElBQU0sVUFBVSxHQUFHLE1BQU0sQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNuRSxJQUFNLFVBQVUsR0FBRyxNQUFNLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLENBQUM7UUFFbkUsT0FBTyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsVUFBVSxFQUFFLFVBQVUsQ0FBQyxDQUFDO2FBQ3pDLElBQUksQ0FBQyxVQUFDLEVBQTBCO2dCQUExQixrQkFBMEIsRUFBekIsbUJBQVcsRUFBRSxtQkFBVztZQUM5QixJQUFNLFdBQVcsZ0JBQ1osS0FBSyxJQUNSLFlBQVksZUFDUCxLQUFLLENBQUMsWUFBWSxJQUNyQixLQUFLLEVBQUUsY0FBYyxDQUFDLFdBQVcsRUFBRSxLQUFLLENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBRWhHLFlBQVksZUFDUCxLQUFLLENBQUMsWUFBWSxJQUNyQixLQUFLLEVBQUUsY0FBYyxDQUFDLFdBQVcsRUFBRSxLQUFLLENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE1BRWpHLENBQUM7WUFDRixPQUFPLFdBQVcsQ0FBQztRQUNyQixDQUFDLENBQUM7YUFDRCxLQUFLLENBQUMsVUFBQyxLQUFVO1lBQ2hCLE9BQU8sQ0FBQyxHQUFHLENBQUMsYUFBTSxDQUFDLFlBQVUsS0FBSyxDQUFDLEtBQU8sQ0FBQyxDQUFDLENBQUM7WUFDN0MsT0FBTyxPQUFPLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ2hDLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUNILHFCQUFDO0FBQUQsQ0FBQyxBQW5DRCxJQW1DQztBQW5DWSx3Q0FBYztBQXFDM0IsU0FBUyxjQUFjLENBQUMsV0FBNEMsRUFBRSxLQUFhLEVBQUUsR0FBVztJQUN4RixJQUFBLHdDQUFpQyxFQUFoQyxZQUFnQyxDQUFDO0lBQ3hDLElBQU0sTUFBTSxHQUFpQixFQUFFLENBQUM7SUFDaEMsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDM0IsTUFBTSxDQUFDLFVBQUEsVUFBVTtRQUNoQixPQUFPLE1BQU0sQ0FBQyxVQUFVLENBQUMsSUFBSSxLQUFLLElBQUksTUFBTSxDQUFDLFVBQVUsQ0FBQyxJQUFJLEdBQUcsQ0FBQztJQUNsRSxDQUFDLENBQUM7U0FDRCxHQUFHLENBQUMsVUFBQSxVQUFVLElBQUksT0FBQSxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUMsVUFBVSxDQUFDLEVBQTdCLENBQTZCLENBQUM7U0FDaEQsT0FBTyxDQUFDLFVBQUEsSUFBSTtRQUNYLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDO0lBQzNCLENBQUMsQ0FBQyxDQUFDO0lBQ0wsT0FBTyxNQUFNLENBQUM7QUFDaEIsQ0FBQyJ9