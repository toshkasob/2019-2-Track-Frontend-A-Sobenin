"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __values = (this && this.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
var clone_1 = require("./clone");
var events_1 = require("./events");
var models_1 = require("./stores/models");
var stores_manager_1 = require("./stores/stores-manager");
var options_1 = require("./utils/options");
var newHashes = [];
var Detector = /** @class */ (function () {
    function Detector(options, eventEmitter) {
        this.options = options;
        this.eventEmitter = eventEmitter;
    }
    Detector.prototype.detectByMap = function (tokenMap) {
        return __awaiter(this, void 0, void 0, function () {
            var e_1, _a, clones, HashesStore_1, tokenMaps, initialMapFramesArray, tokenMap_1, tokenMap_1_1, mapFrame, localDuplicate, tokensStatuses_1, _b, _c, _d;
            var _this = this;
            return __generator(this, function (_e) {
                switch (_e.label) {
                    case 0:
                        clones = [];
                        return [4 /*yield*/, Promise.all(newHashes)];
                    case 1:
                        _e.sent();
                        newHashes = [];
                        if (!(tokenMap.getLength() >= options_1.getOption('minTokens', this.options))) return [3 /*break*/, 4];
                        HashesStore_1 = stores_manager_1.StoresManager.getStore(models_1.getHashDbName(tokenMap.getFormat()));
                        tokenMaps = [];
                        initialMapFramesArray = [];
                        try {
                            for (tokenMap_1 = __values(tokenMap), tokenMap_1_1 = tokenMap_1.next(); !tokenMap_1_1.done; tokenMap_1_1 = tokenMap_1.next()) {
                                mapFrame = tokenMap_1_1.value;
                                localDuplicate = tokenMaps.map(function (fr) { return fr.id; }).includes(mapFrame.id);
                                if (localDuplicate) {
                                    if (tokenMaps[tokenMaps.length - 1].localDuplicate) {
                                        initialMapFramesArray[initialMapFramesArray.length - 1].push(__assign({}, mapFrame, { isClone: true }));
                                    }
                                    else {
                                        initialMapFramesArray.push([__assign({}, mapFrame, { isClone: true })]);
                                    }
                                }
                                tokenMaps.push(__assign({}, mapFrame, { localDuplicate: localDuplicate }));
                            }
                        }
                        catch (e_1_1) { e_1 = { error: e_1_1 }; }
                        finally {
                            try {
                                if (tokenMap_1_1 && !tokenMap_1_1.done && (_a = tokenMap_1.return)) _a.call(tokenMap_1);
                            }
                            finally { if (e_1) throw e_1.error; }
                        }
                        return [4 /*yield*/, HashesStore_1.hasKeys(tokenMaps.map(function (fr) { return fr.id; }))];
                    case 2:
                        tokensStatuses_1 = _e.sent();
                        _c = (_b = clones.push).apply;
                        _d = [clones];
                        return [4 /*yield*/, Promise.all(tokenMaps
                                .reduce(function (mapFramesArray, frame, index) {
                                if (tokensStatuses_1[index]) {
                                    if (!tokensStatuses_1[index - 1]) {
                                        mapFramesArray.push([__assign({}, frame, { isClone: true })]);
                                    }
                                    else {
                                        mapFramesArray[mapFramesArray.length - 1].push(__assign({}, frame, { isClone: true }));
                                    }
                                }
                                else if (!frame.localDuplicate) {
                                    newHashes.push(HashesStore_1.set(frame.id, frame));
                                }
                                return mapFramesArray;
                            }, initialMapFramesArray)
                                .map(function (mapFrames) { return clone_1.createClone(mapFrames[0], mapFrames[mapFrames.length - 1]); }))];
                    case 3:
                        _c.apply(_b, _d.concat([__spread.apply(void 0, [(_e.sent())])]));
                        clones = clones.filter(function (clone) {
                            var isAcceptableClone = clone_1.isCloneLinesBiggerLimit(clone, options_1.getOption('minLines', _this.options));
                            if (isAcceptableClone) {
                                _this.eventEmitter.emit(events_1.CLONE_FOUND_EVENT, clone);
                            }
                            return isAcceptableClone;
                        });
                        _e.label = 4;
                    case 4: return [2 /*return*/, clones];
                }
            });
        });
    };
    return Detector;
}());
exports.Detector = Detector;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV0ZWN0b3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvZGV0ZWN0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EsaUNBQStEO0FBQy9ELG1DQUE2QztBQUs3QywwQ0FBZ0Q7QUFDaEQsMERBQXdEO0FBRXhELDJDQUE0QztBQUU1QyxJQUFJLFNBQVMsR0FBd0IsRUFBRSxDQUFDO0FBRXhDO0lBQ0Usa0JBQW9CLE9BQWlCLEVBQVUsWUFBMEI7UUFBckQsWUFBTyxHQUFQLE9BQU8sQ0FBVTtRQUFVLGlCQUFZLEdBQVosWUFBWSxDQUFjO0lBQUcsQ0FBQztJQUVoRSw4QkFBVyxHQUF4QixVQUF5QixRQUFtQjs7Ozs7Ozt3QkFDdEMsTUFBTSxHQUFhLEVBQUUsQ0FBQzt3QkFDMUIscUJBQU0sT0FBTyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsRUFBQTs7d0JBQTVCLFNBQTRCLENBQUM7d0JBQzdCLFNBQVMsR0FBRyxFQUFFLENBQUM7NkJBQ1gsQ0FBQSxRQUFRLENBQUMsU0FBUyxFQUFFLElBQUksbUJBQVMsQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFBLEVBQTVELHdCQUE0RDt3QkFDeEQsZ0JBQWlDLDhCQUFhLENBQUMsUUFBUSxDQUFDLHNCQUFhLENBQUMsUUFBUSxDQUFDLFNBQVMsRUFBRSxDQUFDLENBRWhHLENBQUM7d0JBRUksU0FBUyxHQUFnQixFQUFFLENBQUM7d0JBRTVCLHFCQUFxQixHQUFrQixFQUFFLENBQUM7OzRCQUNoRCxLQUF1QixhQUFBLFNBQUEsUUFBUSxDQUFBLDBGQUFFO2dDQUF0QixRQUFRO2dDQUNYLGNBQWMsR0FBRyxTQUFTLENBQUMsR0FBRyxDQUFDLFVBQUEsRUFBRSxJQUFJLE9BQUEsRUFBRSxDQUFDLEVBQUUsRUFBTCxDQUFL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