"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var bytes = require("bytes");
var cli_table3_1 = __importDefault(require("cli-table3"));
var safe_1 = require("colors/safe");
var events_1 = require("../events");
var utils_1 = require("../utils");
var console_1 = require("./console");
var TABLE_OPTIONS = {
    chars: {
        top: '',
        'top-mid': '',
        'top-left': '',
        'top-right': '',
        bottom: '',
        'bottom-mid': '',
        'bottom-left': '',
        'bottom-right': '',
        left: '',
        'left-mid': '',
        mid: '',
        'mid-mid': '',
        right: '',
        'right-mid': '',
        middle: 'â”‚'
    }
};
var ConsoleFullReporter = /** @class */ (function (_super) {
    __extends(ConsoleFullReporter, _super);
    function ConsoleFullReporter(options) {
        return _super.call(this, options) || this;
    }
    ConsoleFullReporter.prototype.attach = function (eventEmitter) {
        eventEmitter.on(events_1.SOURCE_SKIPPED_EVENT, this.skipSource.bind(this));
    };
    ConsoleFullReporter.prototype.report = function (clones) {
        var _this = this;
        clones.forEach(function (clone) {
            _this.cloneFullFound(clone);
        });
    };
    ConsoleFullReporter.prototype.skipSource = function (source) {
        console.log(safe_1.grey("Skipped " + source.path + " (Size: " + bytes(source.size) + (source.lines ? ', Lines: ' + source.lines : '') + ")"));
    };
    ConsoleFullReporter.prototype.cloneFullFound = function (clone) {
        if (this.options.reporters && this.options.reporters.includes('consoleFull')) {
            var table_1 = new cli_table3_1.default(TABLE_OPTIONS);
            this.cloneFound(clone);
            clone.duplicationA.fragment.split('\n').forEach(function (line, position) {
                table_1.push(utils_1.generateLine(clone, position, line));
            });
            console.log(table_1.toString());
            console.log('');
        }
    };
    return ConsoleFullReporter;
}(console_1.ConsoleReporter));
exports.ConsoleFullReporter = ConsoleFullReporter;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc29sZS1mdWxsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3JlcG9ydGVycy9jb25zb2xlLWZ1bGwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsNkJBQWdDO0FBQ2hDLDBEQUErQjtBQUMvQixvQ0FBbUM7QUFFbkMsb0NBQW9FO0FBQ3BFLGtDQUF3QztBQUN4QyxxQ0FBNEM7QUFFNUMsSUFBTSxhQUFhLEdBQUc7SUFDcEIsS0FBSyxFQUFFO1FBQ0wsR0FBRyxFQUFFLEVBQUU7UUFDUCxTQUFTLEVBQUUsRUFBRTtRQUNiLFVBQVUsRUFBRSxFQUFFO1FBQ2QsV0FBVyxFQUFFLEVBQUU7UUFDZixNQUFNLEVBQUUsRUFBRTtRQUNWLFlBQVksRUFBRSxFQUFFO1FBQ2hCLGFBQWEsRUFBRSxFQUFFO1FBQ2pCLGNBQWMsRUFBRSxFQUFFO1FBQ2xCLElBQUksRUFBRSxFQUFFO1FBQ1IsVUFBVSxFQUFFLEVBQUU7UUFDZCxHQUFHLEVBQUUsRUFBRTtRQUNQLFNBQVMsRUFBRSxFQUFFO1FBQ2IsS0FBSyxFQUFFLEVBQUU7UUFDVCxXQUFXLEVBQUUsRUFBRTtRQUNmLE1BQU0sRUFBRSxHQUFHO0tBQ1o7Q0FDRixDQUFDO0FBRUY7SUFBeUMsdUNBQWU7SUFDdEQsNkJBQVksT0FBaUI7ZUFDM0Isa0JBQU0sT0FBTyxDQUFDO0lBQ2hCLENBQUM7SUFFTSxvQ0FBTSxHQUFiLFVBQWMsWUFBK0I7UUFDM0MsWUFBWSxDQUFDLEVBQUUsQ0FBQyw2QkFBb0IsRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ3BFLENBQUM7SUFFTSxvQ0FBTSxHQUFiLFVBQWMsTUFBZ0I7UUFBOUIsaUJBSUM7UUFIQyxNQUFNLENBQUMsT0FBTyxDQUFDLFVBQUMsS0FBYTtZQUMzQixLQUFJLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzdCLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVTLHdDQUFVLEdBQXBCLFVBQXFCLE1BQVc7UUFDOUIsT0FBTyxDQUFDLEdBQUcsQ0FDVCxXQUFJLENBQUMsYUFBVyxNQUFNLENBQUMsSUFBSSxnQkFBVyxLQUFLLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLFdBQVcsR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLE9BQUcsQ0FBQyxDQUM5RyxDQUFDO0lBQ0osQ0FBQztJQUVPLDRDQUFjLEdBQXRCLFVBQXVCLEtBQWE7UUFDbEMsSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLEVBQUU7WUFDNUUsSUFBTSxPQUFLLEdBQUcsSUFBSSxvQkFBSyxDQUFDLGFBQWEsQ0FBQyxDQUFDO1lBRXZDLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUM7WUFFdkIsS0FBSyxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUFDLElBQVksRUFBRSxRQUFnQjtnQkFDNUUsT0FBYSxDQUFDLElBQUksQ0FBQyxvQkFBWSxDQUFDLEtBQUssRUFBRSxRQUFRLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQztZQUMzRCxDQUFDLENBQUMsQ0FBQztZQUVILE9BQU8sQ0FBQyxHQUFHLENBQUMsT0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7WUFDOUIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQztTQUNqQjtJQUNILENBQUM7SUFDSCwwQkFBQztBQUFELENBQUMsQUFuQ0QsQ0FBeUMseUJBQWUsR0FtQ3ZEO0FBbkNZLGtEQUFtQiJ9