"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var fs_1 = require("fs");
var rimraf_1 = __importDefault(require("rimraf"));
var use_1 = require("../utils/use");
var files_1 = require("./files");
var leveldb_1 = require("./leveldb");
var memory_1 = require("./memory");
var StoreManager = /** @class */ (function () {
    function StoreManager() {
        this.registeredStores = {
            memory: memory_1.MemoryStore,
            files: files_1.FilesStore,
            leveldb: leveldb_1.LevelDbStore
        };
        this.stores = {};
        this.options = {};
    }
    StoreManager.prototype.initialize = function (options) {
        if (options === void 0) { options = {}; }
        this.options = options;
    };
    StoreManager.prototype.flush = function () {
        this.stores = {};
    };
    StoreManager.prototype.close = function () {
        var _this = this;
        return Promise.all(Object.values(this.stores).map(function (store) { return store.close(); })).then(function () {
            _this.flush();
            var path = '.jscpd';
            if (fs_1.existsSync(path)) {
                var subFolders = fs_1.readdirSync(path);
                if (subFolders.length === 0) {
                    rimraf_1.default(path, {}, function (err) {
                        if (err) {
                            console.log(err);
                        }
                    });
                }
            }
        });
    };
    StoreManager.prototype.getStore = function (name) {
        if (!this.has(name)) {
            this.create(name);
        }
        return this.stores[name];
    };
    StoreManager.prototype.has = function (name) {
        return this.stores.hasOwnProperty(name);
    };
    StoreManager.prototype.getRegisteredStore = function (type) {
        if (!this.isRegistered(type)) {
            this.registeredStores[type] = use_1.use(type, use_1.ModuleType.db);
        }
        return this.registeredStores[type];
    };
    StoreManager.prototype.isRegistered = function (type) {
        return this.registeredStores.hasOwnProperty(type);
    };
    StoreManager.prototype.create = function (name) {
        if (!this.has(name)) {
            // hashes.javascript
            var _a = __read(name.split('.'), 1), main = _a[0];
            var _b = this.options[name] ||
                this.options[main] ||
                this.options['*'] || { type: 'leveldb' }, type = _b.type, _c = _b.options, options = _c === void 0 ? {} : _c;
            this.stores[name] = new (this.getRegisteredStore(type))(__assign({}, options, { name: name }));
            this.stores[name].connect();
        }
    };
    return StoreManager;
}());
exports.StoreManager = StoreManager;
exports.StoresManager = new StoreManager();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmVzLW1hbmFnZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvc3RvcmVzL3N0b3Jlcy1tYW5hZ2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEseUJBQTZDO0FBQzdDLGtEQUE0QjtBQUs1QixvQ0FBK0M7QUFDL0MsaUNBQXFDO0FBQ3JDLHFDQUF5QztBQUN6QyxtQ0FBdUM7QUFFdkM7SUFBQTtRQUNVLHFCQUFnQixHQUVwQjtZQUNGLE1BQU0sRUFBRSxvQkFBVztZQUNuQixLQUFLLEVBQUUsa0JBQVU7WUFDakIsT0FBTyxFQUFFLHNCQUFZO1NBQ3RCLENBQUM7UUFFTSxXQUFNLEdBQWlDLEVBQUUsQ0FBQztRQUUxQyxZQUFPLEdBQXlCLEVBQUUsQ0FBQztJQWlFN0MsQ0FBQztJQS9EUSxpQ0FBVSxHQUFqQixVQUFrQixPQUFrQztRQUFsQyx3QkFBQSxFQUFBLFlBQWtDO1FBQ2xELElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO0lBQ3pCLENBQUM7SUFFTSw0QkFBSyxHQUFaO1FBQ0UsSUFBSSxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUM7SUFDbkIsQ0FBQztJQUVNLDRCQUFLLEdBQVo7UUFBQSxpQkFlQztRQWRDLE9BQU8sT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLENBQUMsVUFBQSxLQUFLLElBQUksT0FBQSxLQUFLLENBQUMsS0FBSyxFQUFFLEVBQWIsQ0FBYSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7WUFDOUUsS0FBSSxDQUFDLEtBQUssRUFBRSxDQUFDO1lBQ2IsSUFBTSxJQUFJLEdBQVcsUUFBUSxDQUFDO1lBQzlCLElBQUksZUFBVSxDQUFDLElBQUksQ0FBQyxFQUFFO2dCQUNwQixJQUFNLFVBQVUsR0FBYSxnQkFBVyxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUMvQyxJQUFJLFVBQVUsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO29CQUMzQixnQkFBTSxDQUFDLElBQUksRUFBRSxFQUFFLEVBQUUsVUFBQyxHQUFVO3dCQUMxQixJQUFJLEdBQUcsRUFBRTs0QkFDUCxPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO3lCQUNsQjtvQkFDSCxDQUFDLENBQUMsQ0FBQztpQkFDSjthQUNGO1FBQ0gsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRU0sK0JBQVEsR0FBZixVQUFnQixJQUFZO1FBQzFCLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQ25CLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDbkI7UUFDRCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDM0IsQ0FBQztJQUVNLDBCQUFHLEdBQVYsVUFBVyxJQUFZO1FBQ3JCLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDMUMsQ0FBQztJQUVNLHlDQUFrQixHQUF6QixVQUEwQixJQUFZO1FBQ3BDLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQzVCLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsR0FBRyxTQUFHLENBQUMsSUFBSSxFQUFFLGdCQUFVLENBQUMsRUFBRSxDQUFDLENBQUM7U0FDeEQ7UUFDRCxPQUFPLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNyQyxDQUFDO0lBRU0sbUNBQVksR0FBbkIsVUFBb0IsSUFBWTtRQUM5QixPQUFPLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDcEQsQ0FBQztJQUVNLDZCQUFNLEdBQWIsVUFBYyxJQUFZO1FBQ3hCLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQ25CLG9CQUFvQjtZQUNkLElBQUEsK0JBQXdCLEVBQXZCLFlBQXVCLENBQUM7WUFFekIsSUFBQTs7d0RBRW9DLEVBRmxDLGNBQUksRUFBRSxlQUFZLEVBQVosaUNBRTRCLENBQUM7WUFFM0MsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxDQUFDLGNBQ2xELE9BQU8sSUFDVixJQUFJLE1BQUEsSUFDSixDQUFDO1lBQ0gsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztTQUM3QjtJQUNILENBQUM7SUFDSCxtQkFBQztBQUFELENBQUMsQUE1RUQsSUE0RUM7QUE1RVksb0NBQVk7QUE4RVosUUFBQSxhQUFhLEdBQXNCLElBQUksWUFBWSxFQUFPLENBQUMifQ==