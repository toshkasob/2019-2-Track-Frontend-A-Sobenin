"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var fs_extra_1 = require("fs-extra");
var rimraf_1 = __importDefault(require("rimraf"));
var level = require('level');
var LevelDbStore = /** @class */ (function () {
    function LevelDbStore(options) {
        this.options = options;
        if (!options.persist) {
            rimraf_1.default.sync(".jscpd/" + this.options.name);
        }
        fs_extra_1.ensureDirSync(".jscpd/" + this.options.name);
        this.db = level(".jscpd/" + this.options.name);
    }
    LevelDbStore.prototype.get = function (key) {
        return this.db
            .get(key)
            .then(function (value) { return JSON.parse(value); })
            .catch(function () { return undefined; });
    };
    LevelDbStore.prototype.getAllByKeys = function (keys) {
        var _this = this;
        return Promise.all(keys.map(function (i) { return _this.get(i); }));
    };
    LevelDbStore.prototype.set = function (key, value) {
        return this.db.put(key, JSON.stringify(value));
    };
    LevelDbStore.prototype.init = function () {
        return Promise.resolve({});
    };
    LevelDbStore.prototype.has = function (key) {
        return this.db
            .get(key)
            .then(function () { return true; })
            .catch(function () { return false; });
    };
    LevelDbStore.prototype.hasKeys = function (keys) {
        var _this = this;
        return Promise.all(keys.map(function (k) { return _this.has(k); }));
    };
    LevelDbStore.prototype.connect = function () {
        this.db.open();
        return Promise.resolve();
    };
    LevelDbStore.prototype.delete = function (key) {
        return this.db.del(key);
    };
    LevelDbStore.prototype.update = function (key, value) {
        var _this = this;
        return this.delete(key).then(function () { return _this.set(key, value); });
    };
    LevelDbStore.prototype.close = function () {
        var _this = this;
        return new Promise(function (resolve) {
            _this.db.close(function () {
                if (!_this.options.persist) {
                    rimraf_1.default(".jscpd/" + _this.options.name, { maxBusyTries: 10 }, function (err) {
                        if (err) {
                            console.log(err);
                        }
                        resolve();
                    });
                }
                else {
                    resolve();
                }
            });
        });
    };
    return LevelDbStore;
}());
exports.LevelDbStore = LevelDbStore;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGV2ZWxkYi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zdG9yZXMvbGV2ZWxkYi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLHFDQUF5QztBQUN6QyxrREFBNEI7QUFLNUIsSUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBRS9CO0lBR0Usc0JBQW9CLE9BQXNCO1FBQXRCLFlBQU8sR0FBUCxPQUFPLENBQWU7UUFDeEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQUU7WUFDcEIsZ0JBQU0sQ0FBQyxJQUFJLENBQUMsWUFBVSxJQUFJLENBQUMsT0FBTyxDQUFDLElBQU0sQ0FBQyxDQUFDO1NBQzVDO1FBQ0Qsd0JBQWEsQ0FBQyxZQUFVLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBTSxDQUFDLENBQUM7UUFFN0MsSUFBSSxDQUFDLEVBQUUsR0FBRyxLQUFLLENBQUMsWUFBVSxJQUFJLENBQUMsT0FBTyxDQUFDLElBQU0sQ0FBQyxDQUFDO0lBQ2pELENBQUM7SUFFTSwwQkFBRyxHQUFWLFVBQVcsR0FBVztRQUNwQixPQUFPLElBQUksQ0FBQyxFQUFFO2FBQ1gsR0FBRyxDQUFDLEdBQUcsQ0FBQzthQUNSLElBQUksQ0FBQyxVQUFDLEtBQWEsSUFBSyxPQUFBLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLEVBQWpCLENBQWlCLENBQUM7YUFDMUMsS0FBSyxDQUFDLGNBQU0sT0FBQSxTQUFTLEVBQVQsQ0FBUyxDQUFDLENBQUM7SUFDNUIsQ0FBQztJQUVNLG1DQUFZLEdBQW5CLFVBQW9CLElBQWM7UUFBbEMsaUJBRUM7UUFEQyxPQUFPLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxVQUFBLENBQUMsSUFBSSxPQUFBLEtBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQVgsQ0FBVyxDQUFDLENBQUMsQ0FBQztJQUNqRCxDQUFDO0lBRU0sMEJBQUcsR0FBVixVQUFXLEdBQVcsRUFBRSxLQUFhO1FBQ25DLE9BQU8sSUFBSSxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztJQUNqRCxDQUFDO0lBRU0sMkJBQUksR0FBWDtRQUNFLE9BQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUM3QixDQUFDO0lBRU0sMEJBQUcsR0FBVixVQUFXLEdBQVc7UUFDcEIsT0FBTyxJQUFJLENBQUMsRUFBRTthQUNYLEdBQUcsQ0FBQyxHQUFHLENBQUM7YUFDUixJQUFJLENBQUMsY0FBTSxPQUFBLElBQUksRUFBSixDQUFJLENBQUM7YUFDaEIsS0FBSyxDQUFDLGNBQU0sT0FBQSxLQUFLLEVBQUwsQ0FBSyxDQUFDLENBQUM7SUFDeEIsQ0FBQztJQUVNLDhCQUFPLEdBQWQsVUFBZSxJQUFjO1FBQTdCLGlCQUVDO1FBREMsT0FBTyxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsVUFBQSxDQUFDLElBQUksT0FBQSxLQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFYLENBQVcsQ0FBQyxDQUFDLENBQUM7SUFDakQsQ0FBQztJQUVNLDhCQUFPLEdBQWQ7UUFDRSxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ2YsT0FBTyxPQUFPLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDM0IsQ0FBQztJQUVNLDZCQUFNLEdBQWIsVUFBYyxHQUFXO1FBQ3ZCLE9BQU8sSUFBSSxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDMUIsQ0FBQztJQUVNLDZCQUFNLEdBQWIsVUFBYyxHQUFXLEVBQUUsS0FBYTtRQUF4QyxpQkFFQztRQURDLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsY0FBTSxPQUFBLEtBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQyxFQUFwQixDQUFvQixDQUFDLENBQUM7SUFDM0QsQ0FBQztJQUVNLDRCQUFLLEdBQVo7UUFBQSxpQkFlQztRQWRDLE9BQU8sSUFBSSxPQUFPLENBQUMsVUFBQSxPQUFPO1lBQ3hCLEtBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDO2dCQUNaLElBQUksQ0FBQyxLQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRTtvQkFDekIsZ0JBQU0sQ0FBQyxZQUFVLEtBQUksQ0FBQyxPQUFPLENBQUMsSUFBTSxFQUFFLEVBQUUsWUFBWSxFQUFFLEVBQUUsRUFBRSxFQUFFLFVBQUEsR0FBRzt3QkFDN0QsSUFBSSxHQUFHLEVBQUU7NEJBQ1AsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQzt5QkFDbEI7d0JBQ0QsT0FBTyxFQUFFLENBQUM7b0JBQ1osQ0FBQyxDQUFDLENBQUM7aUJBQ0o7cUJBQU07b0JBQ0wsT0FBTyxFQUFFLENBQUM7aUJBQ1g7WUFDSCxDQUFDLENBQUMsQ0FBQztRQUNMLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUNILG1CQUFDO0FBQUQsQ0FBQyxBQXZFRCxJQXVFQztBQXZFWSxvQ0FBWSJ9